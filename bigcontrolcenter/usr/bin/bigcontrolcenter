#!/usr/bin/env bash
#shellcheck disable=SC2155
#shellcheck source=/dev/null

#  /usr/bin/bigcontrolcenter
#  Created: 0000/00/00
#  Altered: 2023/08/11'
#
#  Copyright (c) 2023-2023, Vilmar Catafesta <vcatafesta@gmail.com>
#                0000-2023, bigbruno Bruno Gon√ßalves <bruno@biglinux.com.br>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

APP="${0##*/}"
_VERSION_="1.0.0-20230811"
LIBRARY=${LIBRARY:-'/usr/share/bigbashview/bcc/shell'}
BOOTLOG="/tmp/bigcontrolcenter-$USER-$(date +"%d%m%Y").log"
LOGGER='/dev/tty8'
[[ -f "${LIBRARY}/bcclib.sh" ]] && source "${LIBRARY}/bcclib.sh"
#export XDG_RUNTIME="${XDG_RUNTIME:-/run/user/$(id -g)}"

function sh_config {
	#Translation
	export TEXTDOMAINDIR="/usr/share/locale"
	export TEXTDOMAIN=bigcontrolcenter
	export $(dbus-launch)
	declare -gi RELOAD=0
	declare -gi PARTIAL=0
	declare -g bbvpath='/usr/share/bigbashview/bcc/apps/bigcontrolcenter'
	declare -g userpath="$HOME/.config/bigcontrolcenter"
	declare -g custom_user_path="$HOME/.config/bcc/files"
	declare -g appspath='/usr/share/applications'
	declare -g TITLE=$(gettext "Central de Controle")
}

function sh_checkdir {
	[[ ! -d "$custom_user_path" ]] && cmdlogger mkdir -p "$custom_user_path"
	[[ ! -d "$bbvpath"          ]] && cmdlogger mkdir -p "$bbvpath"
	[[ ! -d "$userpath"         ]] && cmdlogger mkdir -p "$userpath"
	cd "$bbvpath" || exit 1
}

function sh_clean_reload {
	[[ -e "$userpath/reload" ]] && rm -f "$userpath/reload"
}

# Verify number of kcmshell5 changed
function sh_verify_kcm_number {
	local nfiles_kcm_user
	local nfiles_kcm_apps

	nfiles_kcm_user=0
	nfiles_kcm_apps=$(wc -l < <(find "$appspath" -type f,l -name 'kcm_*'))
	[[ -e "$userpath/kcmshell_number" ]] && nfiles_kcm_user=$(printf "%s" "$(<"$userpath/kcmshell_number")")
	if (( nfiles_kcm_apps != nfiles_kcm_user )); then
		echo "$nfiles_kcm_apps" > "$userpath/kcmshell_number"
		RELOAD=1
		PARTIAL=0
	fi
}

# Verify number of files in bigcontrolcenter applications
function sh_verify_number_files_bcc_apps {
	local	nfiles_bcc_user
	local	nfiles_bcc_apps

	nfiles_bcc_user=0
	nfiles_bcc_apps=$(wc -l < <(find "$appspath/bigcontrolcenter" -type f))
	[[ -e "$userpath/bccapps_number" ]] && nfiles_bcc_user="$(<"$userpath/bccapps_number")"
	if (( nfiles_bcc_apps != nfiles_bcc_user )); then
		echo "$nfiles_bcc_apps" > "$userpath/bccapps_number"
		RELOAD=1
		PARTIAL=0
	fi
}

# Verify language changed
function sh_verify_user_language {
	local	user_lang

	user_lang=''
	[[ -e "$userpath/lang" ]] && user_lang="$(<"$userpath/lang")"
	if [[ "$LANG" != "$user_lang" ]]; then
		echo "$LANG" > "$userpath/lang"
		RELOAD=1
		PARTIAL=0
	fi
}

# Verify bigcontrolcenter version
function sh_verify_bcc_version {
	local user_version
	local bcc_version

	user_version=''
	bcc_version=$(pacman -Q bigcontrolcenter | cut -f2 -d' ')
	[[ -e "$userpath/version" ]] && user_version=$(printf "%s" "$(<"$userpath/version")")
	if [[ "$bcc_version" != "$user_version" ]]; then
		echo "$bcc_version" > "$userpath/version"
		RELOAD=1
		PARTIAL=0
	fi
}

# Verify number of custom user files
function sh_verify_custom_user_files {
	local ncustom_user_files
	local ncustom_user_apps

	ncustom_user_files=0
	ncustom_user_apps=$(wc -l < <(find "$custom_user_path" -type f,l -name '*'))
	[[ -e "$userpath/custom_number" ]] && ncustom_user_files=$(printf "%s" "$(<"$userpath/custom_number")")
	if (( ncustom_user_apps != ncustom_user_files )); then
		echo "$ncustom_user_apps" > "$userpath/custom_number"
		RELOAD=1
		PARTIAL=1
	fi
}

function sh_main {
	local cfilestart='index.sh.htm'

	# RELOAD=1			#force reload
	if (( RELOAD )); then
		local cfilestart='main.sh.htm'
		if (( PARTIAL )); then
			cmdlogger rm -f "$userpath"/custom-*
		else
			cmdlogger rm -f "$userpath"/cache*
			cmdlogger rm -f "$userpath"/icons/*
			cmdlogger rm -f "$userpath"/show_other
			cmdlogger rm -f "$userpath"/custom-*
		fi
		# Cria arquivo para ser removido dentro do loop-search e verificado no index.sh.htm quando deve prosseguir
		echo '' > "$userpath/reload"
		# Cria arquivo para ser removido dentro do index.sh.htm
		echo '' > "$userpath/refresh"
		#########################################################
		# START CACHE 1
		#########################################################
		cmdlogger nice -n 15 ./loop-search.sh "$PARTIAL" &
	fi
	QT_QPA_PLATFORM=xcb\
		SDL_VIDEODRIVER=x11\
		WINIT_UNIX_BACKEND=x11\
		GDK_BACKEND=x11\
		cmdlogger bigbashview -n "$TITLE" -s 1280x720 "$cfilestart" -i icon.png -d "$bbvpath"
}

#sh_debug
sh_config
sh_checkdir
sh_clean_reload
sh_verify_custom_user_files
sh_verify_kcm_number
sh_verify_number_files_bcc_apps
sh_verify_user_language
sh_verify_bcc_version
sh_main
